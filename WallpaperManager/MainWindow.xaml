<Window
        x:Class="WallpaperManager.MainWindow"
        x:Name="Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:hc="https://handyorg.github.io/handycontrol"
        xmlns:local="clr-namespace:WallpaperManager"
        xmlns:viewModel="clr-namespace:WallpaperManager.ViewModel"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        xmlns:controls="clr-namespace:WallpaperManager.Controls"
        mc:Ignorable="d"
        AllowDrop="True"
        FocusManager.FocusedElement="{Binding ElementName=GroupList}"
        Title="Wallpaper Manager" Height="650" Width="1200">
    <hc:Interaction.Triggers>
        <hc:EventTrigger EventName="Closing">
            <hc:EventToCommand Command="{Binding WindowClosingCommand}" PassEventArgsToCommand="True" />
        </hc:EventTrigger>
        <hc:EventTrigger EventName="Drop">
            <hc:EventToCommand Command="{Binding DropCommand}" PassEventArgsToCommand="True" />
        </hc:EventTrigger>
    </hc:Interaction.Triggers>

    <Window.DataContext>
        <viewModel:ApplicationViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <controls:TimeSpanConverter x:Key="TimeSpanConverter"/>
        <controls:TimeSpanValidation x:Key="TimeSpanValidation"/>
        <controls:ArrayConverter x:Key="ArrayConverter"/>
        <controls:StringToImageSourceConverter x:Key="StringToImageSourceConverter" />
    </Window.Resources>

    <DockPanel>
        <Grid>
            <hc:ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Orientation="Vertical">
                <StackPanel Orientation="Vertical" Margin="30 0" MinWidth="410">
                    <ListBox Name="GroupList" ItemsSource="{Binding Groups}" SelectedItem="{Binding Path=SelectedGroup, Mode=TwoWay}" SelectedIndex="0" TabIndex="0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Grid Margin="0 10">
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition  Width="60"></ColumnDefinition>
                                        <ColumnDefinition  Width="120"></ColumnDefinition>
                                        <ColumnDefinition  Width="120"></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>

                                    <hc:NumericUpDown Grid.Row="0" Grid.Column="0" Value="{Binding StateIndex, Mode=TwoWay}" 
                                                  Minimum="0" Maximum="99" ToolTip="State index"/>
                                    <hc:TimePicker Grid.Row="0" Grid.Column="1" Text="{Binding Start, Mode=TwoWay}"
                                               ToolTip="Start time"></hc:TimePicker>
                                    <hc:TimePicker Grid.Row="0" Grid.Column="2" Text="{Binding End, Mode=TwoWay}"
                                               ToolTip="End time"></hc:TimePicker>
                                    <hc:TextBox Grid.Row="0" Grid.Column="3"
                                            ToolTip="Update interval">
                                        <TextBox.Text>
                                            <Binding Path="Interval" Converter="{StaticResource TimeSpanConverter}">
                                                <Binding.ValidationRules>
                                                    <controls:TimeSpanValidation></controls:TimeSpanValidation>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </hc:TextBox>


                                    <!-- <CheckBox Grid.Row="1" Grid.Column="1"  IsChecked="{Binding IsRandom}">Random</CheckBox> -->
                                    <hc:CheckComboBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="4" ShowClearButton="True" 
                                              local:CheckComBoxHelper.Attach="True"
                                              local:CheckComBoxHelper.SelectedItems="{Binding Displays,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              ItemsSource="{Binding ElementName=Window,Path=DataContext.AvailableDisplays}" 
                                              ShowSelectAllButton="True"
                                              ToolTip="Displays"/>
                                    <Button
                                    Grid.Row="0" Grid.Column="4"  
                                    Command="{Binding ElementName=Window, Path=DataContext.RemoveGroupCommand}"
                                    CommandParameter="{Binding}"
                                    HorizontalAlignment="Right" 
                                    Style="{StaticResource ButtonDanger}" FontWeight="Bold">
                                        -
                                    </Button>
                                </Grid>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Button
                    Command="{Binding ElementName=Window, Path=DataContext.AddGroupCommand}"
                    HorizontalAlignment="Right"
                    Style="{StaticResource ButtonSuccess}" FontWeight="Bold" Margin="5">
                        +
                    </Button>

                </StackPanel>
            </hc:ScrollViewer>
            <TextBlock Text="{Binding CurrentStateIndex}" 
                       VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="10"
                       ToolTip="Current state index. Press [Ctrl + Alt + F10] to change"/>
        </Grid>
       
        <ListBox ItemsSource="{Binding SelectedGroup.AllImages}"
                 Style="{DynamicResource WrapPanelHorizontalListBox}" 
                 HorizontalContentAlignment="Stretch" 
                 VerticalContentAlignment="Center" 
                 AllowDrop="True" Focusable="False"
                 Background="#FFDEDEDE"
                 BorderThickness="0" DockPanel.Dock="Right">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border Width="300" Height="300" Margin="10" VerticalAlignment="Stretch" Background="Transparent">
                        <Image Source="{Binding Item1, Converter={StaticResource StringToImageSourceConverter}, IsAsync=True}" 
                               ToolTip="{Binding Item2}">
                            <Image.InputBindings>
                                <MouseBinding 
                                    Gesture="LeftDoubleClick" 
                                    Command="{Binding ElementName=Window, Path=DataContext.OpenImageCommand}"
                                    CommandParameter="{Binding Item1}">
                                </MouseBinding>
                            </Image.InputBindings>
                        </Image>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Add file" 
                              Command="{Binding AddFileCommand}"
                              CommandParameter="{Binding SelectedGroup}">
                    </MenuItem>
                    <MenuItem Header="Add Folder" 
                              Command="{Binding AddFolderCommand}"
                              CommandParameter="{Binding SelectedGroup}">
                    </MenuItem>
                    <MenuItem Header="Remove" Command="{Binding RemovePathCommand}">
                        <MenuItem.CommandParameter>
                            <MultiBinding Converter="{StaticResource ArrayConverter}">
                                <Binding RelativeSource="{RelativeSource AncestorType={x:Type ContextMenu}}" Path="PlacementTarget.SelectedItem"/>
                                <Binding Path="SelectedGroup"  />
                            </MultiBinding>
                        </MenuItem.CommandParameter>
                    </MenuItem>
                </ContextMenu>
            </ListBox.ContextMenu>
        </ListBox>
    </DockPanel>
</Window>
